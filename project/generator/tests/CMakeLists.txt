add_target_tests(
  TARGET ${PROJECT_NAME}
  HEADERS
    mocks/context/order_context.hpp
    mocks/historical/data_access_adapter.hpp
    mocks/historical/provider.hpp
    mocks/random/counterparty_generator.hpp
    mocks/random/price_generator.hpp
    mocks/random/quantity_generator.hpp
    mocks/random/random_event_generator.hpp
    mocks/random/resting_order_action_generator.hpp
    mocks/random/value_generator.hpp
    mocks/registry/generated_orders_registry.hpp
    mocks/trading_request_channel.hpp
    test_utils/historical_data_utils.hpp
    test_utils/historical_mapping_utils.hpp
  UNIT_TESTS
    unit_tests/adaptation/instrument_descriptor_conversion_tests.cpp
    unit_tests/adaptation/to_protocol_message_conversion_tests.cpp
    unit_tests/context/generation_manager_test.cpp
    unit_tests/context/order_market_data_provider_test.cpp
    unit_tests/historical/adapters/csv_reader_test.cpp
    unit_tests/historical/adapters/data_access_adapter_test.cpp
    unit_tests/historical/data/action_tests.cpp
    unit_tests/historical/data/level_tests.cpp
    unit_tests/historical/data/provider_test.cpp
    unit_tests/historical/data/record_test.cpp
    unit_tests/historical/mapping/column_mapping_filter_tests.cpp
    unit_tests/historical/mapping/configurator_default_association_tests.cpp
    unit_tests/historical/mapping/configurator_no_source_columns_tests.cpp
    unit_tests/historical/mapping/configurator_test.cpp
    unit_tests/historical/mapping/depth_config_tests.cpp
    unit_tests/historical/mapping/source_column_tests.cpp
    unit_tests/historical/mapping/specification_test.cpp
    unit_tests/historical/parsing/csv_parsing_params_tests.cpp
    unit_tests/historical/parsing/database_parsing_params_tests.cpp
    unit_tests/historical/parsing/general_datasource_params_tests.cpp
    unit_tests/historical/parsing/params_tests.cpp
    unit_tests/historical/parsing/parsing_tests.cpp
    unit_tests/historical/parsing/parsing_value_tests.cpp
    unit_tests/historical/parsing/row_tests.cpp
    unit_tests/historical/record_applier_test.cpp
    unit_tests/historical/record_checker_test.cpp
    unit_tests/random/algorithm/order_generation_algorithm_test.cpp
    unit_tests/random/algorithm/utils/attributes_setter_test.cpp
    unit_tests/random/algorithm/utils/max_mktdepth_selector_test.cpp
    unit_tests/random/algorithm/utils/price_params_selector_test.cpp
    unit_tests/random/algorithm/utils/quantity_params_selector_test.cpp
    unit_tests/random/generators/counterparty_generator_test.cpp
    unit_tests/random/generators/event_generator_test.cpp
    unit_tests/random/generators/price_generator_test.cpp
    unit_tests/random/generators/quantity_generator_test.cpp
    unit_tests/random/generators/resting_order_action_generator_test.cpp
    unit_tests/random/generators/value_generator_impl_test.cpp
    unit_tests/random/values/event_test.cpp
    unit_tests/random/values/price_generation_params_test.cpp
    unit_tests/random/values/quantity_generation_params_test.cpp
    unit_tests/random/values/resting_order_action_test.cpp
    unit_tests/registry/generated_order_data_test.cpp
    unit_tests/registry/generated_orders_registry_test.cpp
    unit_tests/registry/registry_updater_test.cpp
    unit_tests/tracing/test_json_tracer.cpp
    unit_tests/tracing/test_trace_value.cpp
    unit_tests/utils/validator_test.cpp)